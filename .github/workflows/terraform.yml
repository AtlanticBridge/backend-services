name: 'Terraform'


on:
  push:
    branches:
      - develop
  pull_request:

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: dev

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        working-directory: '.'
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.8'
    - name: Check python
      run: python3 --version
    - name: Check pip
      run: python3 -m pip --version
    - name: Install dependencies
      run: python3 -m pip install --target ./nfid/code/dependencies/python -r ./nfid/code/requirements.txt

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan
      env:
        TF_VAR_CLIENT_ID: ${{ secrets.TF_CLIENT_ID }}
        TF_VAR_CLIENT_SECRET: ${{ secrets.TF_CLIENT_SECRET }}
        TF_VAR_REDIRECT_URI: ${{ secrets.TF_REDIRECT_URI }}
        TF_VAR_ACCESS_KEY: ${{ secrets.TF_VAR_ACCESS_KEY }}
        TF_VAR_SECRET_KEY: ${{ secrets.TF_VAR_SECRET_KEY }}
        TF_VAR_JWT_SECRET: ${{ secrets.TF_JWT_SECRET }}
        TF_VAR_ID_SECRET: ${{ secrets.TF_ID_SECRET }}
        TF_VAR_MINT_PRIVATE_KEY: ${{ secrets.MINT_PRIVATE_KEY }}
        TF_VAR_NFID_CONTRACT_ADDRESS: ${{ secrets.TF_NFID_CONTRACT_ADDRESS }}
        TF_VAR_INFURA_URL: ${{ secrets.TF_INFURA_URL }}

      # On push to develop, build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
      run: terraform apply -auto-approve
      env:
        TF_VAR_CLIENT_ID: ${{ secrets.TF_CLIENT_ID }}
        TF_VAR_CLIENT_SECRET: ${{ secrets.TF_CLIENT_SECRET }}
        TF_VAR_REDIRECT_URI: ${{ secrets.TF_REDIRECT_URI }}
        TF_VAR_ACCESS_KEY: ${{ secrets.TF_VAR_ACCESS_KEY }}
        TF_VAR_SECRET_KEY: ${{ secrets.TF_VAR_SECRET_KEY }}
        TF_VAR_JWT_SECRET: ${{ secrets.TF_JWT_SECRET }}
        TF_VAR_ID_SECRET: ${{ secrets.TF_ID_SECRET }}
        TF_VAR_MINT_PRIVATE_KEY: ${{ secrets.MINT_PRIVATE_KEY }}
        TF_VAR_NFID_CONTRACT_ADDRESS: ${{ secrets.TF_NFID_CONTRACT_ADDRESS }}
        TF_VAR_INFURA_URL: ${{ secrets.TF_INFURA_URL }}
